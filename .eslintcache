[{"D:\\Users\\Desktop\\restoplus-counter\\src\\index.js":"1","D:\\Users\\Desktop\\restoplus-counter\\src\\components\\App.jsx":"2","D:\\Users\\Desktop\\restoplus-counter\\src\\firebase.js":"3"},{"size":157,"mtime":1611225818401,"results":"4","hashOfConfig":"5"},{"size":2640,"mtime":1611398993475,"results":"6","hashOfConfig":"5"},{"size":661,"mtime":1611489190016,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1jqafy5",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Users\\Desktop\\restoplus-counter\\src\\index.js",[],["16","17"],"D:\\Users\\Desktop\\restoplus-counter\\src\\components\\App.jsx",["18"],"import React, { useState, useEffect } from \"react\";\r\nimport firebase, { db } from \"../firebase\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    \"&:hover\": {\r\n      background: \"rgba(0, 175, 145, 0.07)\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  const [count, setCount] = useState(0);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const increment = firebase.firestore.FieldValue.increment(1);\r\n  const decrement = firebase.firestore.FieldValue.increment(-1);\r\n\r\n  const countRef = db.collection(\"countCollection\").doc(\"count\");\r\n\r\n  const getCount = async () => {\r\n    const doc = await countRef.get();\r\n\r\n    if (!doc.exists) {\r\n      countRef.set({\r\n        count: 0,\r\n      });\r\n    }\r\n\r\n    countRef.onSnapshot(function (doc) {\r\n      setCount(doc.data().count);\r\n      doc.data().count % 10 === 0 && doc.data().count > 0\r\n        ? setOpen(true)\r\n        : setOpen(false);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCount();\r\n  }, []);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  function incrementCount() {\r\n    countRef.update({ count: increment });\r\n  }\r\n\r\n  function decrementCount() {\r\n    countRef.update({ count: decrement });\r\n  }\r\n\r\n  function resetCount() {\r\n    countRef.update({ count: 0 });\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"first-row\">\r\n        <IconButton color=\"secondary\" onClick={incrementCount}>\r\n          <AddIcon fontSize=\"large\" />\r\n        </IconButton>\r\n        <p className=\"counter\">{count}</p>\r\n        <IconButton color=\"primary\" onClick={decrementCount}>\r\n          <RemoveIcon fontSize=\"large\" />\r\n        </IconButton>\r\n      </div>\r\n      <div className=\"second-row\">\r\n        <IconButton\r\n          classes={{\r\n            root: classes.root,\r\n          }}\r\n          onClick={resetCount}\r\n        >\r\n          <RefreshIcon className=\"reset\" fontSize=\"large\" />\r\n        </IconButton>\r\n      </div>\r\n\r\n      <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n        <Alert variant=\"filled\" severity=\"info\" onClose={handleClose}>\r\n          Email update sent!\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Users\\Desktop\\restoplus-counter\\src\\firebase.js",[],{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":49,"column":6,"nodeType":"25","endLine":49,"endColumn":8,"suggestions":"26"},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCount'. Either include it or remove the dependency array.","ArrayExpression",["29"],"no-global-assign","no-unsafe-negation",{"desc":"30","fix":"31"},"Update the dependencies array to be: [getCount]",{"range":"32","text":"33"},[1342,1344],"[getCount]"]